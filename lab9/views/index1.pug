doctype html
// Zmień wartość "lang" z 'en' na 'pl'
head
  meta(charset='UTF-8')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  link(rel='stylesheet' href='animations.css' media='screen' type='text/css')
  link(rel='stylesheet' href='https://www.w3schools.com/w3css/4/w3.css')
  // Icons
  link(rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css')
  link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css')
  title
    | Wypo&zdot;yczalnia samochod&oacute;w
header.w3-display-container.w3-border.w3-amber.w3-padding.w3-container.w3-cell-row.w3-border-amber.w3-large
  div
    .w3-left
      i.fa.fa-car.w3-xxlarge
    .w3-right.w3-hide-small
      button.w3-button.w3-border.w3-round.w3-padding.w3-right.w3-border-black.w3-amber.w3-hide-small.w3-yellow Szukaj
    .w3-right.w3-margin-right.w3-hide-small
      input.w3-input.w3-right.w3-round.w3-margin-right(placeholder='szukaj')
    .w3-dropdown-click.w3-right.w3-margin-right.w3-hide-small
      button.w3-button.w3-margin-right.w3-hide-small(onclick='myFunction()')
        i.fa.fa-caret-down
        | &nbsp;&nbsp; Pojazdy
      #large.w3-dropdown-content.w3-bar-block.w3-border.w3-margin-right.w3-round.w3-border-grey.w3-hide-small
        a.w3-bar-item.w3-button Samochody
        a.w3-bar-item.w3-button Przyczepy

    div
      a.w3-bar-item.w3-button.w3-right.w3-border.w3-border-black.w3-round.w3-hide-large.w3-hide-medium.w3-yellow(href='javascript:void(0)' onclick='myFunction()') &#x2630;
    #small.w3-bar-block.w3-amber.w3-hide.w3-hide-large.w3-hide-medium
      a.w3-bar-item.w3-button.w3-border.w3-border-black.w3-round.w3-yellow(href='#') Samochody
      a.w3-bar-item.w3-button.w3-border.w3-border-black.w3-round.w3-yellow(href='#') Przyczepy
      input.w3-hide-large.w3-hide-medium.w3-border.w3-border-black.w3-round(type='text' placeholder='Szukaj')
      button.w3-hide-large.w3-button.w3-hide-medium.w3-border.w3-border-black.w3-round.w3-yellow Szukaj
// CANVAS
canvas#canvas1.w3-right(name='canv' width='200' height='300' style='border:1px solid #000000; position:sticky; float: right; margin: 10px; top: 0px;')
  | Wygl&aogon;da na to, &zdot;e twoja przegl&aogon;darka nie obs&lstrok;uguje elementu &quot;canvas&quot; / It looks like your browser does not support the &quot;canvas&quot; element

div(class='w3-border w3-border-black w3-round w3-margin w3-right w3-padding')
  a Obecny użytkownik:
  br
  a(id='curUser')

div(class='w3-border w3-border-black w3-round w3-margin w3-right w3-padding')
  a Obecnie ustawione daty:
  br
  a(id='curDataw')
  br
  a(id='curDataz')

div(class='w3-border w3-border-black w3-round w3-margin w3-right w3-padding')
  a Wynik operacji:
  br
  a(id='operResult')



button.w3-btn.w3-block.w3-amber.w3-left-align.w3-border.w3-border-black.w3-round.w3-margin-bottom.w3-margin-top(id='carsAccord' onclick="AccordFunction('Demo1')" style='width: 20%; margin-left: 4px;') Dost&eogon;pne samochody
#Demo1.w3-hide.w3-margin-bottom(style='width: 20%')
    each set in cars
        div(class='w3-border w3-border-black w3-round w3-margin')
          img(src=set.src alt='car' style='width:20%' onclick=`sell('${set.brand}')`)
          a #{set.brand} 
          a(onclick=`rentRetur('rent:${set.brand}')`) Ilość: #{set.amount} 
          a Koszt wypożyczenia: #{set.rent_cost}
          a Koszt kupna: #{set.sell_cost}
button.w3-btn.w3-block.w3-amber.w3-left-align.w3-border.w3-border-black.w3-round.w3-margin-bottom(onclick="AccordFunction('Demo2')" style='width: 20%; margin-left: 4px;') Kupione
#Demo2.w3-hide.w3-margin-bottom(style='width: 20%')
    each set in bought
      div(class='w3-border w3-border-black w3-round w3-margin')
        a Kupujący: #{set.name} #{set.surname}
        a Samochód/przyczepa: #{set.brand} 
        a Koszt kupna: #{set.cost}
        a Data kupna: #{set.bought_date}

button.w3-btn.w3-block.w3-amber.w3-left-align.w3-border.w3-border-black.w3-round.w3-margin-bottom(onclick="AccordFunction('Demo3')" style='width: 20%; margin-left: 4px;') Wypo&zdot;yczone
#Demo3.w3-hide.w3-margin-bottom(style='width: 20%')
    each set in rented
      div(class='w3-border w3-border-black w3-round w3-margin' onclick=`rentRetur('retur:${set.brand} ${set.name} ${set.surname}')`)
        a Kupujący: #{set.name} #{set.surname}
        a Samochód/przyczepa: #{set.brand} 
        a Koszt kupna: #{set.cost}
        a Data wypożyczenia: #{set.dataw}
        a Data zwrotu: #{set.dataz}
        a Data kupna: #{set.bought_date}

input#user.w3-left(type='text' name='user' placeholder='Użytkownik...' style='margin-left: 4px;')
input#datawz.w3-left(type='text' name='dates' placeholder='Data_wypożyczenia Data_zwrotu' style='margin-left: 4px;')

footer.w3-border.w3-border-light-green.w3-light-green.w3-bottom
  a.w3-text-white.w3-margin
    i.far.fa-copyright
    | &nbsp;AGH Company


script.
  function myFunction() {
  var x = document.getElementById("large");
  if (x.className.indexOf("w3-show") == -1) {
  x.className += " w3-show";
  } else {
  x.className = x.className.replace(" w3-show", "");
  }
  var y = document.getElementById("small");
  if (y.className.indexOf("w3-show") == -1) {
  y.className += " w3-show";
  } else {
  y.className = y.className.replace(" w3-show", "");
  }
  }
  function slow_animation(){
  document.getElementById('small').className = 'dropdown';
  }
  function AccordFunction(id) {
  var x = document.getElementById(id);
  if (x.className.indexOf("w3-show") == -1) {
  x.className += " w3-show";
  } else {
  x.className = x.className.replace("w3-show", "");
  }
  }
  
    function buildLogo(){
        let e = document.getElementById('canvas1');
        let can = e.getContext('2d');

        can.globalCompositeOperation = 'xor';


        can.lineWidth = 8;
        // c.strokeStyle='#353433';
        can.fillStyle='#fffed6';
        can.fillRect(0, 0, 640, 480);
        can.beginPath();

        can.lineWidth = 3; 
        can.strokeStyle='#55fa47';
        can.fillStyle='#7d97ff';
        can.arc(e.width / 2 + e.width / 7, e.height / 2 + e.height / 6, e.height/8, 0 * Math.PI, 2 * Math.PI, false);
        can.fill();
        can.stroke();

        can.beginPath();
        can.lineWidth = 3; 
        can.strokeStyle='#7de7ff';
        can.fillStyle='#7d97ff';
        can.arc(e.width / 2 -  e.width / 7, e.height / 2 + e.height / 6, e.height/8, 0 * Math.PI, 2 * Math.PI, false);
        can.fill();
        can.stroke();

        can.beginPath();
        can.lineWidth = 3; 
        can.strokeStyle='#ff8d7d';
        can.fillStyle='#7d97ff';
        can.arc(e.width / 2, e.height / 2, e.height/8, 0 * Math.PI, 2 * Math.PI, false);
        can.fill();
        can.stroke();

        can.beginPath();
        can.lineWidth = 3; 
        can.strokeStyle='#7d97ff';
        can.fillStyle='#7d97ff';
        can.arc(e.width / 2, e.height / 2 + e.height / 9, e.height/12, 0 * Math.PI, 2 * Math.PI, false);
        can.fill();
        can.stroke();

        can.beginPath();
        can.moveTo(e.width / 2 + e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2 -  e.width / 7, e.height / 2 + e.height / 6);
        can.stroke();
        can.beginPath();
        can.moveTo(e.width / 2 - e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2, e.height / 2);
        can.stroke();
        can.beginPath();
        can.moveTo(e.width / 2, e.height / 2);
        can.lineTo(e.width / 2 + e.width / 7, e.height / 2 + e.height / 6 );
        can.stroke();

        can.beginPath();
        can.moveTo(e.width / 2, e.height / 2);
        can.lineTo(e.width / 2 + e.width / 7 + 5, e.height / 2 +  e.height/23);
        can.strokeStyle='#ff8d7d';
        can.stroke();
        can.beginPath();
        can.moveTo(e.width / 2, e.height / 2);
        can.lineTo(e.width / 2 - e.width / 7 - 5, e.height / 2 +  e.height/23);
        can.stroke();

        can.beginPath();
        can.moveTo(e.width / 2 + e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2 + e.width / 7 + 5, e.height / 2 +  e.height/23);
        can.strokeStyle='#55fa47';
        can.stroke();
        can.beginPath();
        can.moveTo(e.width / 2 + e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2,  e.height / 2 + e.height / 6 + e.height / 16 + 4);
        can.stroke();

        can.beginPath();
        can.moveTo(e.width / 2 - e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2 - e.width / 7 - 5, e.height / 2 +  e.height/23);
        can.strokeStyle='#7de7ff';
        can.stroke();
        can.beginPath();
        can.moveTo(e.width / 2 - e.width / 7, e.height / 2 + e.height / 6);
        can.lineTo(e.width / 2,  e.height / 2 + e.height / 6 + e.height / 16 + 4);
        can.stroke();
    }
    buildLogo()

    function proba(brand){
        console.log('DZIAŁA PRÓBA')
        console.log('Podana marka: ' + brand)
    }


    function actualizeCars(allCars){
      let carsObj = document.getElementById('carsAccord')
      let demo1 = document.getElementById('Demo1')
      demo1.innerHTML = ''

      for (let i=0; i < allCars.length; i++){

            let fragment = document.createDocumentFragment();

            let div = document.createElement('div')
            div.setAttribute('class', 'w3-border w3-border-black w3-round w3-margin')
            let fragment2 = document.createDocumentFragment();

            let a = document.createElement('a')
            a.textContent = allCars[i].brand + '\r\n' + ' Koszt zakupu: ' + allCars[i].sell_cost + ' Koszt wypożyczenia: ' + allCars[i].rent_cost

            let img = document.createElement('img')
            img.setAttribute('src', allCars[i].src)
            img.setAttribute('alt', allCars[i].brand)
            img.setAttribute('style', 'width: 20%; margin-right: 5px;')
            img.addEventListener('click', function(e){
                e.stopPropagation
                console.log('Tutaj ma być sell')
                sell(allCars[i].brand)
            })

            let a2 = document.createElement('a')
            a2.textContent = 'Ilość sztuk: ' + allCars[i].amount
            a2.addEventListener('click', function(e){
                e.stopPropagation
                console.log('Tutaj ma być rent')
                rentRetur('rent:' + allCars[i].brand)
            })
            
            fragment2.appendChild(img)
            fragment2.appendChild(a)
            fragment2.appendChild(a2)

            div.appendChild(fragment2)
            fragment.appendChild(div)
            demo1.appendChild(fragment)
      }
    }


    function actualizeBoughts(allBoughts){
      console.log('Wchodzi w actualizeBoughts')

      let carsObj = document.getElementById('carsAccord')
      let demo2 = document.getElementById('Demo2')
      demo2.innerHTML = ''
      console.log('Wchodzi w actualizeBoughts')

      for (let i=0; i < allBoughts.length; i++){

            let fragment = document.createDocumentFragment();

            let div = document.createElement('div')
            div.setAttribute('class', 'w3-border w3-border-black w3-round w3-margin')
            let fragment2 = document.createDocumentFragment();

            let a = document.createElement('a')
            a.textContent = allBoughts[i].brand + '\r\n' + ' Kupujący: ' + allBoughts[i].name + ' ' + allBoughts[i].surname + ' Koszt: ' + allBoughts[i].cost + ' Data zakupu: ' + allBoughts[i].bought_date
            
            fragment2.appendChild(a)

            div.appendChild(fragment2)
            fragment.appendChild(div)
            demo2.appendChild(fragment)
      }
    }


    function actualizeRented(allRented){
      console.log('Wchodzi w actualizeRented')

      let carsObj = document.getElementById('carsAccord')
      let demo3 = document.getElementById('Demo3')
      demo3.innerHTML = ''

      for (let i=0; i < allRented.length; i++){

            let fragment = document.createDocumentFragment();

            let div = document.createElement('div')
            div.setAttribute('class', 'w3-border w3-border-black w3-round w3-margin')
            div.addEventListener('click', function(e){
                e.stopPropagation
                console.log('Tutaj ma być retur')
                rentRetur('retur:' + allRented[i].brand + ' ' +  allRented[i].name + ' ' + allRented[i].surname)
            })

            let fragment2 = document.createDocumentFragment();

            let a = document.createElement('a')
            a.textContent = allRented[i].brand + '\r\n' + ' Kupujący: ' + allRented[i].name + ' ' + allRented[i].surname + ' Koszt: ' + allRented[i].cost + ' Data wypożyczenia: ' + allRented[i].dataw + ' Data zwrotu: ' + allRented[i].dataz + ' Data zakupu: ' + allRented[i].bought_date
            
            fragment2.appendChild(a)

            div.appendChild(fragment2)
            fragment.appendChild(div)
            demo3.appendChild(fragment)
      }
    }


    function sendData(data) {

      let temp = data
      temp = data.split(':')

      console.log('Zaczynam sendData')
      var headers = new Headers({'Content-Type':'application/x-www-form-urlencoded'});

      fetch('/', {method: 'PUT', body: 'data=' + data, headers: {'Content-Type':'application/x-www-form-urlencoded'}}) // Execution of the (asynchronous) query to the web server — a promise is created
      .then(function (response) { // if the promise is fulfilled
          if (!response.ok)
              throw Error(response.statusText);
          if (response.headers.get("Content-Type") !== 'application/json') {
              // If the received data is plain text or an XML document
        
              const result = response.text();
              async function getContent(){
                  let a = await result
                  a = JSON.parse(a)

                  console.log('Wiadomość zwrotna: ' + a.message)

                  if (a.message == 'UserSuccess'){
                    let obj = document.getElementById('curUser')
                    let obj2 = document.getElementById('operResult')

                    obj.innerHTML = temp[1]
                    obj2.innerHTML = 'Użytkownik został ustawiony'
                  }

                  else if (a.message == 'DatesSuccess'){
                    let obj1 = document.getElementById('curDataw')
                    let obj2 = document.getElementById('curDataz')
                    let obj3 = document.getElementById('operResult')

                    let daty = temp[1].split(' ')
                    obj1.innerHTML = 'Data wypożyczenia: ' + daty[0]
                    obj2.innerHTML = 'Data zwrotu: ' + daty[1]
                    obj3.innerHTML = 'Daty zostały ustawione'

                  }
                  
                  else {

                    console.log('a.message: ' + a.message)

                    if (a.message == 'Samochód został dodany poprawnie'){

                      let allCars = a.cars
                      actualizeCars(allCars)
                    }

                    let obj3 = document.getElementById('operResult')
                    obj3.innerHTML = a.message
                    
                  }
              }

              getContent()

          }
          else {
              //If the received data is a JSON document
              const result = response.json();
              window.alert(result); // show the Promise object
              console.log(result);
          }
      })
      .catch(function (error) { // if the promise is rejected
          window.alert(error);
      });
    }


    function sell(brand) {
      console.log('Zaczynam postFetchAPI')
      var headers = new Headers({'Content-Type':'application/x-www-form-urlencoded'});

      fetch('/', {method: 'POST', body: 'brand=' + brand, headers: {'Content-Type':'application/x-www-form-urlencoded'}}) // Execution of the (asynchronous) query to the web server — a promise is created
      .then(function (response) { // if the promise is fulfilled
          if (!response.ok)
              throw Error(response.statusText);
          if (response.headers.get("Content-Type") !== 'application/json') {
              // If the received data is plain text or an XML document

        
              const result = response.text();
              async function getContent(){
                  let a = await result
                  a = JSON.parse(a)

                  console.log('Wiadomość zwrotna: ' + a.message)

                  if (a.message == 'Successfully bought'){
                    let allCars = a.cars
                    console.log('allCars: ' + allCars)
                    let allBought = a.bought
                    actualizeCars(allCars)
                    actualizeBoughts(allBought)

                  }


                  let obj3 = document.getElementById('operResult')
                  obj3.innerHTML = a.message

              }
              getContent()

          }
          else {
              //If the received data is a JSON document
              const result = response.json();
              console.log(result);
          }
      })
      .catch(function (error) { // if the promise is rejected
          window.alert(error);
      });
  }


    function rentRetur(data) {
      console.log('Zaczynam postFetchAPI')
      var headers = new Headers({'Content-Type':'application/x-www-form-urlencoded'});

      fetch('/', {method: 'DELETE', body: 'data=' + data, headers: {'Content-Type':'application/x-www-form-urlencoded'}}) // Execution of the (asynchronous) query to the web server — a promise is created
      .then(function (response) {
          if (!response.ok)
              throw Error(response.statusText);
          if (response.headers.get("Content-Type") !== 'application/json') {

        
              const result = response.text();
              async function getContent(){
                  let a = await result
                  a = JSON.parse(a)
                  console.log('Wiadomość zwrotna: ' + a.message)

                  if (a.message == 'Successfully rented' || a.message == 'Car successfully returned'){
                    let allCars = a.cars
                    let allRented = a.rented
                    actualizeCars(allCars)
                    actualizeRented(allRented)
                  }

                    let obj3 = document.getElementById('operResult')
                    obj3.innerHTML = a.message
                  
              }
              getContent()
          }
          else {
              //If the received data is a JSON document
              const result = response.json();
              console.log(result);
          }
      })
      .catch(function (error) { // if the promise is rejected
          window.alert(error);
      });
  }


  document.getElementsByName('user')[0]
    .addEventListener("keyup", function(event) {
    event.preventDefault();
    if (event.keyCode === 13) {
      console.log('Użytkownik: ' + document.getElementsByName('user')[0].value)
      sendData('user:' + document.getElementsByName('user')[0].value)

    }
    });

  document.getElementsByName('dates')[0]
    .addEventListener("keyup", function(event) {
    event.preventDefault();
    if (event.keyCode === 13) {
      console.log('Daty: ' + document.getElementsByName('dates')[0].value)
      sendData('dates:' + document.getElementsByName('dates')[0].value)
    }
  });


  var logo = document.getElementById('canvas1')
  logo.addEventListener('dblclick', function(){
    console.log('Działa dblclick')
    let new_car_prompt = prompt("car   amount   sell_cost   rent_cost_per_day   img_url");
    sendData('add:' + new_car_prompt)

  })



